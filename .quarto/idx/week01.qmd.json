{"title":"Introduction to the Course","markdown":{"yaml":{"title":"Introduction to the Course"},"headingText":"Introducing R and RStudio","containsRefs":false,"markdown":"\n\nThis is a Quarto document. It has three parts: a header, some text written in markdown, and some chunks of R code.\n\nThe header of the document contains key-value pairs that are acted upon when the document is rendered to html using the render button. The header is written in a markup language called YAML. YAML cares about indentation, so you need to indent certain items consistently for them to be understood by the renderer.\n\nThe main body of the document is text written in Markdown. Markdown was originally written as a kind of shorthand for html so that instead of long html tags, you would use short Markdown tags. For example, this section is called *Intro* and at the top of it there is a blank line followed by a hashtag followed by the word *Intro*. You could instead use the html tag `<h1>Intro</h1>` but it is shorter to write `# Intro`. For a second level heading you use two hashtags. Keep in mind that you can mix html and Markdown in a Markdown file.\n\nThe third part of the document is chunks of R code. These start with a blank line followed by three backticks, followed by the letter *r* in curly braces. It looks like this:\n\n````markdown\n```{{r}}\n1 + 1\n```\n````\n\nBear in mind that a backtick is not the same thing as an apostrophe. On your keyboard it is usually on the same key as the tilde.\n\nBy default, when you render the document, the code in chunks is executed and the result is displayed in the html version of the document.\n\nFirst we introduce R and RStudio and, finally, Quarto. First, either use the RStudio server at\n[https://rstudio.ischool.utexas.edu](https://rstudio.ischool.utexas.edu) or\ninstall R and RStudio, in that order. Some people have trouble installing, especially Windows or Mac. Some Mac users were opening the `.dmg` file for RStudio as a readonly volume, then open the app on that volume. Instead, you have to drag the RStudio icon to the Applications folder and open it from there. The telltale sign of this problem is that you can't save any files. Windows users have a different problem. Some Windows users try to install RStudio and R on OneDrive. RStudio won't run from OneDrive and some Windows users can't tell the difference between installing on a local hard drive and installing in the cloud on OneDrive.\n\n## Console\nThe first thing we can try (after installing if you chose to have it on your machine) is to use the console. By default, that is in the lower left of the RStudio window (you can move everything around, though) and it has a command prompt that looks like `>`. There enter the following function to verify that you can download R packages, which are collections of functions.\n\n```{r}\nlibrary(MASS)\n```\n\nIf this works, you won't get any output from the `library()` function but the command prompt will reappear. That function loads the package from the library into our environment so we can use it in the current session. If you screw around with RStudio and particularly if you follow a lot of hints on Stack Overflow, you may end up with several libraries of packages, all out of sync with each other. If you have trouble loading packages from the library, you may want to call the following function to see how many libraries are on your computer and where they are. This function will return the list of library folders on the server if you call it there.\n\n```{r}\n.libPaths()\n```\n\nThis function returns a list of folders containing libraries, one library per folder. You can then use the terminal or a file explorer outside of R to delete some duplicate packages. The important library for this class is `/opt/R/4.3.1/lib/R/library`. Only I can install packages there. If you need a package that is not installed, it is best to ask me to install it there. You also probably have a personal library where you can install packages, but on this machine, it is better not to do so.\n\nAfter loading the relative small package known as `MASS`, go on to install a package that is actually a large set of packages, collectively known as the Tidyverse. This is a set of packages we will use in our homework.\n\n```{r}\nlibrary(tidyverse)\n```\n\nThis takes a while because there are so many packages involved.\n\n## The `mtcars` data set\nThere is a lot of data built into R by default. We look at one such data set, called `mtcars`. Run a function that looks at the first few lines of the data set, `head(mtcars)`, then checked the help screen for the data set, saying `help(mtcars)`, then produce a linear model of the `mpg` column being predicted by the `disp` column, saying `summary(lm(mpg~disp,data=mtcars))`. This linear model is the heart of regression analysis and one of the main things we'll learn in this course is how to read the summary.\n\n```{r}\nhead(mtcars)\nhelp(mtcars)\nsummary(lm(mpg~disp,data=mtcars))\n```\n\n## Textbook data sets\nOur textbook, *Openintro Stats*, contains references to a lot of data sets, many of which I've downloaded and put into the folder `/home/mm223266/data/`. You can just use them from this location or go to the URL [https://openintro.org/data](https://openintro.org/data), but if you can't remember that, you can just google *openintro stats* and navigate to the data sets. Look at the metadata for the `loan50` data set, which is used in Chapter 1 of the textbook. You can download it in four different formats, the best of which is the `.rda` file or *R Data* file. It's the best because it preserves the data types, in this case dbl, int, and fctr. If we instead import the .csv file, we have to then specify the data types in R, which is an extra step we'd like to avoid when possible.\n\nWhen we download a file, R doesn't know where it is automatically. We do one of three things.\n\n- Change R to address the folder where we downloaded it\n- Move it to the folder R is currently addressing\n- [Keep R addressing your homework folder, but reach out for the data sets where I've downloaded them (only works if you're using the RStudio Server).]{.weekn}\n\nHow you do this depends on the operating system but, in any operating system we use the following three functions.\n\n```{r}\ngetwd()\n# setwd(\"/home/mm223266/i306/\")\nload(paste0(Sys.getenv(\"STATS_DATA_DIR\"),\"/loan50.rda\"))\n```\n\nThe first function tells us which folder (or directory if you prefer) R is addressing. The second one changes to the folder / directory we would like to use. (I've commented it out for this study guide.) The third one addresses the data where I've put it but leaves your working directory where it is. This is very convenient because it means that (1) you don't have to download data sets, and (2) I don't have to modify your homework file in order to check it.\n\nMy suggestion is that you create a folder for this class and use the third option. You can make your folder your default in RStudio, using Tools > Global Options > General > Default working directory.\n\nOnce we load `loan50.rda`, look at it and try to predict `total_credit_limit` using `annual_income`. Keep in mind that, if the file is in the current working directory / folder, R will autocomplete its name when you say `lo` and then press the tab key (assuming there are no other files starting with the letters lo in the same folder). You just have to enter enough letters to make the name unique before you press the tab key. If nothing happens when you press the tab key, you are either in the wrong folder or you have other files starting with the same letters.\n\n```{r}\nhead(loan50)\nsummary(lm(total_credit_limit~annual_income,data=loan50))\n```\n\n## The `migraine` data set\nNext we load the `migraine.rda` file from the same place as above and reproduce a figure from the textbook by using the `table()` function.\n\n```{r}\nload(paste0(Sys.getenv(\"STATS_DATA_DIR\"),\"/migraine.rda\"))\nhead(migraine)\nwith(migraine,table(pain_free,group))\n```\n\nWe could have done this graphically.\n\n```{r}\ntbl <- with(migraine,table(pain_free,group))\nmosaicplot(tbl)\n```\n\nExamine the mosaic plot and the table to see how the sizes of the rectangles compare to the numbers.\n\nWe could also more precisely reproduce the figure from the textbook by adding row and column sums.\n\n```{r}\naddmargins(tbl)\n```\n\nWe could make it prettier by using the pander package.\n\n```{r}\nlibrary(pander)\npander(addmargins(tbl))\n```\n\n`pander` has a lot of options we could use to make it even prettier, but we'll skip that for now. There are also a lot of other packages similar to `pander` for prettifying R output.\n\nWe could display proportions instead of the raw numbers, but it looks ugly, so we'll then use the `options()` function to make it look better.\n\n```{r}\nprop.table(tbl)\noptions(digits=1)\nprop.table(tbl)\n```\n\nBear in mind that `digits=1` is a *suggestion* to R and that R will determine the exact number of digits on its own, depending on the value of the variables to be displayed.\n\n","srcMarkdownNoYaml":"\n\nThis is a Quarto document. It has three parts: a header, some text written in markdown, and some chunks of R code.\n\nThe header of the document contains key-value pairs that are acted upon when the document is rendered to html using the render button. The header is written in a markup language called YAML. YAML cares about indentation, so you need to indent certain items consistently for them to be understood by the renderer.\n\nThe main body of the document is text written in Markdown. Markdown was originally written as a kind of shorthand for html so that instead of long html tags, you would use short Markdown tags. For example, this section is called *Intro* and at the top of it there is a blank line followed by a hashtag followed by the word *Intro*. You could instead use the html tag `<h1>Intro</h1>` but it is shorter to write `# Intro`. For a second level heading you use two hashtags. Keep in mind that you can mix html and Markdown in a Markdown file.\n\nThe third part of the document is chunks of R code. These start with a blank line followed by three backticks, followed by the letter *r* in curly braces. It looks like this:\n\n````markdown\n```{{r}}\n1 + 1\n```\n````\n\nBear in mind that a backtick is not the same thing as an apostrophe. On your keyboard it is usually on the same key as the tilde.\n\nBy default, when you render the document, the code in chunks is executed and the result is displayed in the html version of the document.\n\n## Introducing R and RStudio\nFirst we introduce R and RStudio and, finally, Quarto. First, either use the RStudio server at\n[https://rstudio.ischool.utexas.edu](https://rstudio.ischool.utexas.edu) or\ninstall R and RStudio, in that order. Some people have trouble installing, especially Windows or Mac. Some Mac users were opening the `.dmg` file for RStudio as a readonly volume, then open the app on that volume. Instead, you have to drag the RStudio icon to the Applications folder and open it from there. The telltale sign of this problem is that you can't save any files. Windows users have a different problem. Some Windows users try to install RStudio and R on OneDrive. RStudio won't run from OneDrive and some Windows users can't tell the difference between installing on a local hard drive and installing in the cloud on OneDrive.\n\n## Console\nThe first thing we can try (after installing if you chose to have it on your machine) is to use the console. By default, that is in the lower left of the RStudio window (you can move everything around, though) and it has a command prompt that looks like `>`. There enter the following function to verify that you can download R packages, which are collections of functions.\n\n```{r}\nlibrary(MASS)\n```\n\nIf this works, you won't get any output from the `library()` function but the command prompt will reappear. That function loads the package from the library into our environment so we can use it in the current session. If you screw around with RStudio and particularly if you follow a lot of hints on Stack Overflow, you may end up with several libraries of packages, all out of sync with each other. If you have trouble loading packages from the library, you may want to call the following function to see how many libraries are on your computer and where they are. This function will return the list of library folders on the server if you call it there.\n\n```{r}\n.libPaths()\n```\n\nThis function returns a list of folders containing libraries, one library per folder. You can then use the terminal or a file explorer outside of R to delete some duplicate packages. The important library for this class is `/opt/R/4.3.1/lib/R/library`. Only I can install packages there. If you need a package that is not installed, it is best to ask me to install it there. You also probably have a personal library where you can install packages, but on this machine, it is better not to do so.\n\nAfter loading the relative small package known as `MASS`, go on to install a package that is actually a large set of packages, collectively known as the Tidyverse. This is a set of packages we will use in our homework.\n\n```{r}\nlibrary(tidyverse)\n```\n\nThis takes a while because there are so many packages involved.\n\n## The `mtcars` data set\nThere is a lot of data built into R by default. We look at one such data set, called `mtcars`. Run a function that looks at the first few lines of the data set, `head(mtcars)`, then checked the help screen for the data set, saying `help(mtcars)`, then produce a linear model of the `mpg` column being predicted by the `disp` column, saying `summary(lm(mpg~disp,data=mtcars))`. This linear model is the heart of regression analysis and one of the main things we'll learn in this course is how to read the summary.\n\n```{r}\nhead(mtcars)\nhelp(mtcars)\nsummary(lm(mpg~disp,data=mtcars))\n```\n\n## Textbook data sets\nOur textbook, *Openintro Stats*, contains references to a lot of data sets, many of which I've downloaded and put into the folder `/home/mm223266/data/`. You can just use them from this location or go to the URL [https://openintro.org/data](https://openintro.org/data), but if you can't remember that, you can just google *openintro stats* and navigate to the data sets. Look at the metadata for the `loan50` data set, which is used in Chapter 1 of the textbook. You can download it in four different formats, the best of which is the `.rda` file or *R Data* file. It's the best because it preserves the data types, in this case dbl, int, and fctr. If we instead import the .csv file, we have to then specify the data types in R, which is an extra step we'd like to avoid when possible.\n\nWhen we download a file, R doesn't know where it is automatically. We do one of three things.\n\n- Change R to address the folder where we downloaded it\n- Move it to the folder R is currently addressing\n- [Keep R addressing your homework folder, but reach out for the data sets where I've downloaded them (only works if you're using the RStudio Server).]{.weekn}\n\nHow you do this depends on the operating system but, in any operating system we use the following three functions.\n\n```{r}\ngetwd()\n# setwd(\"/home/mm223266/i306/\")\nload(paste0(Sys.getenv(\"STATS_DATA_DIR\"),\"/loan50.rda\"))\n```\n\nThe first function tells us which folder (or directory if you prefer) R is addressing. The second one changes to the folder / directory we would like to use. (I've commented it out for this study guide.) The third one addresses the data where I've put it but leaves your working directory where it is. This is very convenient because it means that (1) you don't have to download data sets, and (2) I don't have to modify your homework file in order to check it.\n\nMy suggestion is that you create a folder for this class and use the third option. You can make your folder your default in RStudio, using Tools > Global Options > General > Default working directory.\n\nOnce we load `loan50.rda`, look at it and try to predict `total_credit_limit` using `annual_income`. Keep in mind that, if the file is in the current working directory / folder, R will autocomplete its name when you say `lo` and then press the tab key (assuming there are no other files starting with the letters lo in the same folder). You just have to enter enough letters to make the name unique before you press the tab key. If nothing happens when you press the tab key, you are either in the wrong folder or you have other files starting with the same letters.\n\n```{r}\nhead(loan50)\nsummary(lm(total_credit_limit~annual_income,data=loan50))\n```\n\n## The `migraine` data set\nNext we load the `migraine.rda` file from the same place as above and reproduce a figure from the textbook by using the `table()` function.\n\n```{r}\nload(paste0(Sys.getenv(\"STATS_DATA_DIR\"),\"/migraine.rda\"))\nhead(migraine)\nwith(migraine,table(pain_free,group))\n```\n\nWe could have done this graphically.\n\n```{r}\ntbl <- with(migraine,table(pain_free,group))\nmosaicplot(tbl)\n```\n\nExamine the mosaic plot and the table to see how the sizes of the rectangles compare to the numbers.\n\nWe could also more precisely reproduce the figure from the textbook by adding row and column sums.\n\n```{r}\naddmargins(tbl)\n```\n\nWe could make it prettier by using the pander package.\n\n```{r}\nlibrary(pander)\npander(addmargins(tbl))\n```\n\n`pander` has a lot of options we could use to make it even prettier, but we'll skip that for now. There are also a lot of other packages similar to `pander` for prettifying R output.\n\nWe could display proportions instead of the raw numbers, but it looks ugly, so we'll then use the `options()` function to make it look better.\n\n```{r}\nprop.table(tbl)\noptions(digits=1)\nprop.table(tbl)\n```\n\nBear in mind that `digits=1` is a *suggestion* to R and that R will determine the exact number of digits on its own, depending on the value of the variables to be displayed.\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"include-in-header":{"text":"<style>\n#quarto-sidebar .menu-text {\n  display: flex;\n}\n#quarto-sidebar .chapter-number {\n  display: block;\n  width: 1.5rem;\n  text-align: right;\n}\n#quarto-sidebar .chapter-title {\n  display: block;\n  padding-left: 8px;\n  text-indent: -2px;\n  width: 100%;\n}\n</style>\n"},"output-file":"week01.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","bibliography":["master.bib"],"mainfont":"Tex Gyre Schola","monofont":"JetBrainsMono Nerd Font","mathfont":"Tex Gyre Schola Math","theme":"cosmo","title":"Introduction to the Course"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}